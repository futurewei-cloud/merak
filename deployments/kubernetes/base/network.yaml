#    MIT License
#    Copyright(c) 2022 Futurewei Cloud
#    Permission is hereby granted,
#    free of charge, to any person obtaining a copy of this software and associated documentation files(the "Software"), to deal in the Software without restriction,
#    including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and to permit persons
#  to whom the Software is furnished to do so, subject to the following conditions:
#    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

apiVersion: v1
kind: Service
metadata:
  name: merak-network-service
  namespace: merak
spec:
  selector:
    app: merak-network
  ports:
    - protocol: TCP
      name: grpc
      port: 40053
      targetPort: network-grpc
  type: ClusterIP
---
# Merak Network Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: merak-network
  namespace: merak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: merak-network
  template:
    metadata:
      labels:
        app: merak-network
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: merak-network
          image: meraksim/merak-network:dev
          imagePullPolicy: Always
          ports:
            - containerPort: 40053
              name: network-grpc
---
apiVersion: v1
kind: Service
metadata:
  name: merak-redis-network
  namespace: merak
  labels:
    app: redis-network
    role: main
    tier: backend
spec:
  ports:
    - protocol: TCP
      port: 30053
      targetPort: network-redis
  selector:
    app: redis-network
    role: main
    tier: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-network
  namespace: merak
  labels:
    app: redis-network
    role: main
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-network
  template:
    metadata:
      labels:
        app: redis-network
        role: main
        tier: backend
    spec:
      containers:
        - name: network-redis-main
          image: "redis:7.0.0"
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 6379
              name: network-redis
