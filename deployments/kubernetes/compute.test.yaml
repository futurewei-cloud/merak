# MIT License
# Copyright(c) 2022 Futurewei Cloud
#     Permission is hereby granted,
#     free of charge, to any person obtaining a copy of this software and associated documentation files(the "Software"), to deal in the Software without restriction,
#     including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and to permit persons
#     to whom the Software is furnished to do so, subject to the following conditions:
#     The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

apiVersion: v1
kind: Service
metadata:
  name: merak-compute-service
  namespace: merak
spec:
  selector:
    app: merak-compute
  ports:
    - protocol: TCP
      name: grpc
      port: 40051
      targetPort: compute-grpc
  type: ClusterIP
---
# Merak Compute Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: merak-compute
  namespace: merak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: merak-compute
  template:
    metadata:
      labels:
        app: merak-compute
    spec:
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: merak-compute
        image: meraksim/merak-compute:test
        imagePullPolicy: Always
        ports:
          - containerPort: 40051
            name: compute-grpc
        env:
        - name: "TEMPORAL"
          value: "temporaltest-frontend.default.svc.cluster.local"
---
# Merak Compute VM Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: merak-compute-vm-worker
  namespace: merak
spec:
  replicas: 5
  selector:
    matchLabels:
      app: merak-compute-vm-worker
  template:
    metadata:
      labels:
        app: merak-compute-vm-worker
    spec:
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: merak-compute-vm-worker
        image: meraksim/merak-compute-vm-worker:test
        imagePullPolicy: Always
        env:
        - name: "TEMPORAL"
          value: "temporaltest-frontend.default.svc.cluster.local"
# Single Redis Leader.
# TODO: Add followers and follower service
---
apiVersion: v1
kind: Service
metadata:
  name: compute-redis-main
  namespace: merak
  labels:
    app: redis
    role: main
    tier: backend
spec:
  ports:
  - protocol: TCP
    port: 30051
    targetPort: compute-redis
  selector:
    app: redis
    role: main
    tier: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compute-redis-main
  namespace: merak
  labels:
    app: redis
    role: main
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        role: main
        tier: backend
    spec:
      containers:
      - name: main
        image: "redis:7.0.0"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
          name: compute-redis
