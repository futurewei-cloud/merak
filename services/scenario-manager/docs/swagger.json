{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Restful APIs for Merak Cloud Emulator",
        "title": "Merak Rest API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/compute-config": {
            "get": {
                "description": "Get all compute-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "compute-config"
                ],
                "summary": "Get all compute-config from database",
                "responses": {
                    "200": {
                        "description": "array of compute-config with success message",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.ComputeConfig"
                            }
                        }
                    },
                    "404": {
                        "description": "null compute-config data with error message"
                    }
                }
            },
            "post": {
                "description": "Create a compute-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "compute-config"
                ],
                "summary": "Insert a compute-config to database",
                "parameters": [
                    {
                        "description": "ComputeConfig",
                        "name": "compute_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.ComputeConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compute data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ComputeConfig"
                        }
                    },
                    "500": {
                        "description": "Compute null with failure message"
                    }
                }
            }
        },
        "/api/compute-config/{id}": {
            "get": {
                "description": "Get a compute-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "compute-config"
                ],
                "summary": "Get a compute-config from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComputeConfId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "compute-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ComputeConfig"
                        }
                    },
                    "404": {
                        "description": "compute-config data with null and error message"
                    }
                }
            },
            "put": {
                "description": "Update a compute-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "compute-config"
                ],
                "summary": "Update a compute-config to database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComputeConfId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ComputeConfig",
                        "name": "compute_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "compute_config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ComputeConfig"
                        }
                    },
                    "500": {
                        "description": "compute_config null with failure message"
                    }
                }
            },
            "delete": {
                "description": "Delete a compute-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "compute-config"
                ],
                "summary": "Delete a compute-config from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComputeConfId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "compute-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ComputeConfig"
                        }
                    },
                    "404": {
                        "description": "compute-config data with null and error message"
                    }
                }
            }
        },
        "/api/network-config": {
            "get": {
                "description": "Get all network-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "network-config"
                ],
                "summary": "Get all network-config from database",
                "responses": {
                    "200": {
                        "description": "array of network-config with success message",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.NetworkConfig"
                            }
                        }
                    },
                    "404": {
                        "description": "null network-config data with error message"
                    }
                }
            },
            "post": {
                "description": "Create a network-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "network-config"
                ],
                "summary": "Insert a network-config to database",
                "parameters": [
                    {
                        "description": "NetworkConfig",
                        "name": "network_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.NetworkConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "network-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.NetworkConfig"
                        }
                    },
                    "500": {
                        "description": "network-config null with failure message"
                    }
                }
            }
        },
        "/api/network-config/{id}": {
            "get": {
                "description": "Get a network-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "network-config"
                ],
                "summary": "Get a network-config from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NetworkId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "network-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.NetworkConfig"
                        }
                    },
                    "404": {
                        "description": "network-config data with null and error message"
                    }
                }
            },
            "put": {
                "description": "Update a network-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "network-config"
                ],
                "summary": "Update a network-config to database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NetworkId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NetworkConfig",
                        "name": "network_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "network-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.NetworkConfig"
                        }
                    },
                    "500": {
                        "description": "network-config null with failure message"
                    }
                }
            },
            "delete": {
                "description": "Delete a network-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "network-config"
                ],
                "summary": "Delete a network-config from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NetworkId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "network-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.NetworkConfig"
                        }
                    },
                    "404": {
                        "description": "network-config data with null and error message"
                    }
                }
            }
        },
        "/api/scenarios": {
            "post": {
                "description": "Create a scenario",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "scenario"
                ],
                "summary": "Insert a scenario to database",
                "parameters": [
                    {
                        "description": "Scenario",
                        "name": "scenario",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Scenario"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "scenario data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.Scenario"
                        }
                    },
                    "500": {
                        "description": "scenario null with failure message"
                    }
                }
            }
        },
        "/api/scenarios/action": {
            "post": {
                "description": "Take an action on a scenario",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "scenario"
                ],
                "summary": "Do something on a scenario",
                "parameters": [
                    {
                        "description": "ScenarioAction",
                        "name": "scenario",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.ScenarioAction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "scenario action data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ScenarioAction"
                        }
                    },
                    "500": {
                        "description": "scenario action null with failure message"
                    }
                }
            }
        },
        "/api/senarios": {
            "get": {
                "description": "Get all scenario",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "scenario"
                ],
                "summary": "Get all scenario from database",
                "responses": {
                    "200": {
                        "description": "array of scenario with success message",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Scenario"
                            }
                        }
                    },
                    "404": {
                        "description": "null scenario data with error message"
                    }
                }
            }
        },
        "/api/senarios/{id}": {
            "get": {
                "description": "Get a scenario",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "scenario"
                ],
                "summary": "Get a scenario from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ScenarioId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "scenario data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.Scenario"
                        }
                    },
                    "404": {
                        "description": "scenario data with null and error message"
                    }
                }
            },
            "put": {
                "description": "Update a scenario",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "scenario"
                ],
                "summary": "Update a scenario to database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ScenarioId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Scenario",
                        "name": "scenario",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "scenario data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.Scenario"
                        }
                    },
                    "500": {
                        "description": "scenario null with failure message"
                    }
                }
            },
            "delete": {
                "description": "Delete a scenario",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "scenario"
                ],
                "summary": "Delete a scenario from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ScenarioId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "scenario data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.Scenario"
                        }
                    },
                    "404": {
                        "description": "scenario data with null and error message"
                    }
                }
            }
        },
        "/api/service-config": {
            "get": {
                "description": "Get all service-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "service-config"
                ],
                "summary": "Get all service-config from database",
                "responses": {
                    "200": {
                        "description": "array of service-config with success message",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.ServiceConfig"
                            }
                        }
                    },
                    "404": {
                        "description": "null service-config data with error message"
                    }
                }
            },
            "post": {
                "description": "Create a service-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "service-config"
                ],
                "summary": "Insert a service-config to database",
                "parameters": [
                    {
                        "description": "ServiceConfig",
                        "name": "service_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.ServiceConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ServiceConfig"
                        }
                    },
                    "500": {
                        "description": "service-config null with failure message"
                    }
                }
            }
        },
        "/api/service-config/{id}": {
            "get": {
                "description": "Get a service-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "service-config"
                ],
                "summary": "Get a service-config from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NetworkId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ServiceConfig"
                        }
                    },
                    "404": {
                        "description": "service-config data with null and error message"
                    }
                }
            },
            "put": {
                "description": "Update a service-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "service-config"
                ],
                "summary": "Update a service-config to database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NetworkId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ServiceConfig",
                        "name": "Service_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ServiceConfig"
                        }
                    },
                    "500": {
                        "description": "service-config null with failure message"
                    }
                }
            },
            "delete": {
                "description": "Delete a service-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "service-config"
                ],
                "summary": "Delete a service-config from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NetworkId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.ServiceConfig"
                        }
                    },
                    "404": {
                        "description": "service-config data with null and error message"
                    }
                }
            }
        },
        "/api/test-config": {
            "get": {
                "description": "Get all test-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "test-config"
                ],
                "summary": "Get all test-config from database",
                "responses": {
                    "200": {
                        "description": "array of test-config with success message",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.TestConfig"
                            }
                        }
                    },
                    "404": {
                        "description": "null test-config data with error message"
                    }
                }
            },
            "post": {
                "description": "Create a test-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "test-config"
                ],
                "summary": "Insert a test-config to database",
                "parameters": [
                    {
                        "description": "TestConfig",
                        "name": "test_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.TestConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compute data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.TestConfig"
                        }
                    },
                    "500": {
                        "description": "Compute null with failure message"
                    }
                }
            }
        },
        "/api/test-config/{id}": {
            "get": {
                "description": "Get a test-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "test-config"
                ],
                "summary": "Get a test-config from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComputeConfId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "test-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.TestConfig"
                        }
                    },
                    "404": {
                        "description": "test-config data with null and error message"
                    }
                }
            },
            "put": {
                "description": "Update a test-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "test-config"
                ],
                "summary": "Update a test-config to database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComputeConfId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TestConfig",
                        "name": "compute_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "compute_config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.TestConfig"
                        }
                    },
                    "500": {
                        "description": "compute_config null with failure message"
                    }
                }
            },
            "delete": {
                "description": "Delete a test-config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "test-config"
                ],
                "summary": "Delete a test-config from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComputeConfId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "test-config data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.TestConfig"
                        }
                    },
                    "404": {
                        "description": "test-config data with null and error message"
                    }
                }
            }
        },
        "/api/topologies": {
            "get": {
                "description": "Get all topologies",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "topology"
                ],
                "summary": "Get all topologies from database",
                "responses": {
                    "200": {
                        "description": "array of topology with success message",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.TopologyConfig"
                            }
                        }
                    },
                    "404": {
                        "description": "null topology data with error message"
                    }
                }
            },
            "post": {
                "description": "Create a topology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "topology"
                ],
                "summary": "Insert a topology to database",
                "parameters": [
                    {
                        "description": "TopologyConfig",
                        "name": "topology_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.TopologyConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "topology data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.TopologyConfig"
                        }
                    },
                    "500": {
                        "description": "topology null with failure message"
                    }
                }
            }
        },
        "/api/topologies/{id}": {
            "get": {
                "description": "Get a topology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "topology"
                ],
                "summary": "Get a topology from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TopologyId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "topology data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.TopologyConfig"
                        }
                    },
                    "404": {
                        "description": "topology data with null and error message"
                    }
                }
            },
            "put": {
                "description": "Update a topology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "topology"
                ],
                "summary": "Update a topology to database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TopologyId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TopologyConfig",
                        "name": "topology_config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "topology data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.TopologyConfig"
                        }
                    },
                    "500": {
                        "description": "topology null with failure message"
                    }
                }
            },
            "delete": {
                "description": "Delete a topology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "topology"
                ],
                "summary": "Delete a topology from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TopologyId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "topology data with success message",
                        "schema": {
                            "$ref": "#/definitions/entities.TopologyConfig"
                        }
                    },
                    "404": {
                        "description": "topology data with null and error message"
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.ComputeConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "number_of_compute_nodes": {
                    "type": "integer"
                },
                "number_of_port_per_vm": {
                    "type": "integer"
                },
                "number_of_vm_per_vpc": {
                    "type": "integer"
                },
                "scheduler": {
                    "type": "string"
                },
                "vm_deploy_type": {
                    "type": "string"
                },
                "vpc_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.VPCInfo"
                    }
                }
            }
        },
        "entities.Gateway": {
            "type": "object",
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.Image": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cmd": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registry": {
                    "type": "string"
                }
            }
        },
        "entities.NetworkConfig": {
            "type": "object",
            "properties": {
                "gateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Gateway"
                    }
                },
                "name": {
                    "type": "string"
                },
                "number_of_security_groups": {
                    "type": "integer"
                },
                "number_of_subnet_per_vpc": {
                    "type": "integer"
                },
                "number_of_vpcs": {
                    "type": "integer"
                },
                "routers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Router"
                    }
                },
                "security_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.SecurityGroup"
                    }
                },
                "vpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.VPCInfo"
                    }
                }
            }
        },
        "entities.Nic": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.Router": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "subnet_gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entities.Rule": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "ethertype": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port_range": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "remote_group_id": {
                    "type": "string"
                },
                "remote_ip_prefix": {
                    "type": "string"
                }
            }
        },
        "entities.Scenario": {
            "type": "object",
            "properties": {
                "compute_config_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network_config_id": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "service_config_id": {
                    "type": "string"
                },
                "test_config_id": {
                    "type": "string"
                },
                "topology_id": {
                    "type": "string"
                }
            }
        },
        "entities.ScenarioAction": {
            "type": "object",
            "properties": {
                "scenario_id": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.ServiceAction"
                    }
                }
            }
        },
        "entities.SecurityGroup": {
            "type": "object",
            "properties": {
                "apply_to": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Rule"
                    }
                },
                "tenant_id": {
                    "type": "string"
                }
            }
        },
        "entities.Service": {
            "type": "object",
            "properties": {
                "cmd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "return_code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "return_string": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                },
                "when_to_run": {
                    "type": "string"
                },
                "where_to_run": {
                    "type": "string"
                }
            }
        },
        "entities.ServiceAction": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "service_name": {
                    "description": "The service id and name with the action\nin: path\nenum: DEPLOY, DELETE, UPDATE, CHECK",
                    "type": "string"
                }
            }
        },
        "entities.ServiceConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Service"
                    }
                }
            }
        },
        "entities.SubnetInfo": {
            "type": "object",
            "properties": {
                "number_of_vms": {
                    "type": "integer"
                },
                "subnet_cidr": {
                    "type": "string"
                },
                "subnet_gateway": {
                    "type": "string"
                }
            }
        },
        "entities.Test": {
            "type": "object",
            "properties": {
                "cmd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "script": {
                    "type": "string"
                },
                "when_to_run": {
                    "type": "string"
                },
                "where_to_run": {
                    "type": "string"
                }
            }
        },
        "entities.TestConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Test"
                    }
                }
            }
        },
        "entities.TopologyConfig": {
            "type": "object",
            "properties": {
                "control_plane_gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "data_plane_cidr": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Image"
                    }
                },
                "name": {
                    "type": "string"
                },
                "number_of_control_plane_gateways": {
                    "type": "integer"
                },
                "number_of_racks": {
                    "type": "integer"
                },
                "number_of_vhosts": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "vhosts_per_rack": {
                    "type": "integer"
                },
                "vlinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.VLink"
                    }
                },
                "vnodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.VNode"
                    }
                }
            }
        },
        "entities.VLink": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "entities.VNode": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Nic"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entities.VPCInfo": {
            "type": "object",
            "properties": {
                "number_of_subnets": {
                    "type": "integer"
                },
                "project_id": {
                    "type": "string"
                },
                "subnet_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.SubnetInfo"
                    }
                },
                "tenant_id": {
                    "type": "string"
                }
            }
        }
    }
}